<Window x:Class="DemoCutterGUI.CombineCutter"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:talex="http://schemas.talex-soft.com/2010/xaml/presentation"
        xmlns:local="clr-namespace:DemoCutterGUI"
        xmlns:glWpfControl="clr-namespace:OpenTK.Wpf;assembly=GLWpfControl"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        mc:Ignorable="d"
        d:DataContext="{StaticResource ResourceKey=ExampleData}"
        Title="CombineCutter" Height="450" Width="1000">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="checkedToVisibe" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="20"></RowDefinition>
            <RowDefinition Height="20"></RowDefinition>
            <RowDefinition Height="20"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition Width="290"></ColumnDefinition>
            <ColumnDefinition Width="270"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <glWpfControl:GLWpfControl Grid.RowSpan="2" Grid.Column="1"
            x:Name="OpenTkControl" 
            Render="OpenTkControl_OnRender"/>
        <WrapPanel Grid.Row="0" Grid.Column="2">
            <CheckBox x:Name="speedPreserveCheck" ToolTip="With this, deleting elements tries to preserve the speed of the following element, adjusting all elements after. This does not take into account the more advanced interpolation and is very simplistic" Checked="UpdateSettingsFromGUI" Unchecked="UpdateSettingsFromGUI">Speed preservation mode</CheckBox>
            <CheckBox x:Name="speedChangeDemoTimeModeCheck" ToolTip="When changing by speed, should we change demoTime instead of time?" Checked="UpdateSettingsFromGUI" Unchecked="UpdateSettingsFromGUI" IsEnabled="{Binding ElementName=speedPreserveCheck,Path=IsChecked}" IsChecked="True">DemoTime mode</CheckBox>
            <CheckBox x:Name="speedSlidersCheck" IsChecked="False" >Speed sliders</CheckBox>
        </WrapPanel>
        <ListView Grid.Row="1" Grid.Column="2" x:Name="demoLinePointsView" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto" d:ItemsSource="{Binding Path=DemoLinePoints}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <WrapPanel>
                            <Label Margin="2" Padding="2" FontSize="10">Time</Label>
                            <talex:NumericUpDown  Value="{Binding time,Mode=TwoWay}" Maximum="99999999999999999" Margin="2" Padding="2" Width="60"  FontSize="10"></talex:NumericUpDown>
                            <Label Margin="2" Padding="2" FontSize="10">DemoTime</Label>
                            <talex:NumericUpDown  Value="{Binding demoTime,Mode=TwoWay}" Maximum="99999999999999999" Margin="2" Padding="2" Width="60"   FontSize="10"></talex:NumericUpDown>
                            <talex:NumericUpDown  DecimalPlaces="2" Increment="0.1" Maximum="999999999999999999" Minimum="0" Value="{Binding effectiveSpeed,Mode=TwoWay}" IsEnabled="{Binding ElementName=speedPreserveCheck,Path=IsChecked}"  Margin="2" Padding="2" Width="40"   FontSize="10"></talex:NumericUpDown>
                        </WrapPanel>
                        <WrapPanel>
                            <Slider Minimum="0" Maximum="10" Width="200" Visibility="{Binding ElementName=speedSlidersCheck,Path=IsChecked, Converter={StaticResource checkedToVisibe}}" Value="{Binding effectiveSpeed,Mode=TwoWay}" IsEnabled="{Binding ElementName=speedPreserveCheck,Path=IsChecked}" IsManipulationEnabled="{Binding ElementName=speedPreserveCheck,Path=IsChecked}" IsHitTestVisible="{Binding ElementName=speedPreserveCheck,Path=IsChecked}" Focusable="{Binding ElementName=speedPreserveCheck,Path=IsChecked}"   Margin="2" Padding="2"></Slider>

                        </WrapPanel>
                        
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Slider x:Name="scrubSlider" Value="{Binding scrubPosition,Mode=TwoWay}" Grid.Column="1" ValueChanged="scrubSlider_ValueChanged" Grid.Row="2" Minimum="{Binding currentMin}" Maximum="{Binding currentMax}"></Slider>
        <WrapPanel Grid.Row="2" Grid.Column="2" Grid.RowSpan="2">
            <Button x:Name="newTimePointBtn" Click="newTimePointBtn_Click">New Time Point</Button>
            <Button x:Name="delTimePointBtn" IsEnabled="False">Delete Time Point(s)</Button>
        </WrapPanel>
        <mah:RangeSlider Grid.Column="0" LowerValueChanged="rangeSlider_ValueChanged" UpperValueChanged="rangeSlider_ValueChanged" x:Name="rangeSliderVert" Grid.Row="0" Grid.ColumnSpan="1" Grid.RowSpan="4" Minimum="{Binding absoluteMinVert}" Maximum="{Binding absoluteMaxVert}" LowerValue="{Binding currentMinVert,Mode=TwoWay}" UpperValue="{Binding currentMaxVert,Mode=TwoWay}" Orientation="Vertical"></mah:RangeSlider>
        <mah:RangeSlider Grid.Column="0" LowerValueChanged="rangeSlider_ValueChanged" UpperValueChanged="rangeSlider_ValueChanged" x:Name="rangeSlider" Grid.Row="4" Grid.ColumnSpan="4" Minimum="{Binding absoluteMin}" Maximum="{Binding absoluteMax}" LowerValue="{Binding currentMin,Mode=TwoWay}" UpperValue="{Binding currentMax,Mode=TwoWay}" Orientation="Horizontal"></mah:RangeSlider>
        <TabControl Grid.Column="4" Grid.Row="1">
            <TabItem Header="Debugging" x:Name="debuggingTab">
                <StackPanel>
                    <CheckBox IsChecked="{Binding inversionTest}" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked">Inverse Line Test</CheckBox>
                    <WrapPanel>

                        <Label>Inversion test value</Label>
                        <talex:NumericUpDown x:Name="inversionTestValueControl" Value="{Binding inversionTestValue,Mode=TwoWay}" Maximum="99999999999999999" Margin="2" Padding="2" Width="60"  DecimalPlaces="2" FontSize="10" ValueChanged="inversionTestValueControl_ValueChanged"></talex:NumericUpDown>
                        <talex:NumericUpDown x:Name="inversionTestValueVerifyControl" IsEnabled="False" Value="{Binding verifyTestPositionValue}" Maximum="99999999999999999" Margin="2" Padding="2" Width="60"   DecimalPlaces="2" FontSize="10" ValueChanged="inversionTestValueControl_ValueChanged"></talex:NumericUpDown>

                    </WrapPanel>
                </StackPanel>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
